module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy       // AVR RX buffer full
  ) {
  
  sig rst;                  // reset signal
  sig io_seg;
  sig io_sel;
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    .rst(rst){
    counter ctr (#SIZE(4), #DIV(24), #TOP(9));
      //top(9) to count from 0-9 , size(4) since 1111 = 9 
  }
  }
  
  
  always {
  
    //num_to_seg.in = ctr.value;
        
    
    //to not cycle 
    //io_sel = 4h0; 
    
    //to cycle 
    num_to_seg.in = ctr.value[2:0]
    num_to_digit.in = ctr.value[4:3];
    io_seg = ~num_to_seg.out; //~ to invert 
    io_sel = ~num_to_digit.out;
    
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
  }
}